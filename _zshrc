# ----------------
# General
# ----------------
export EDITOR=vim
export LANG=ja_JP.UTF-8
export KCODE=u

setopt no_beep
setopt magic_equal_subst
setopt Prompt_subst
setopt notify
setopt ignore_eof

# Complement
autoload -U compinit
compinit -u
setopt auto_list
setopt auto_menu
setopt list_packed
setopt list_types
setopt always_to_end
setopt correct
setopt print_eight_bit
bindkey "^[[Z" reverse-menu-complete

# Command history configuration
HISTFILE=~/.zsh_history
HISTSIZE=10000
SAVEHIST=10000
setopt hist_ignore_dups
setopt share_history
setopt hist_reduce_blanks

# ----------------
# Appearance
# ----------------
autoload -U colors; colors

# LS
alias ls="ls -aF --color=auto"
alias ll="ls -alsF --color=auto"
export LSCOLORS=Exfxcxdxbxegedabagacad
export LS_COLORS='di=01;34:ln=01;35:so=01;32:ex=01;31:bd=46;34:cd=43;34:su=41;30:sg=46;30:tw=42;30:ow=43;30'
export ZLS_COLORS=$LS_COLORS
export CLICOLOR=true
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}

# ---Prompt----
# VCS
autoload -Uz add-zsh-hook
autoload -Uz vcs_info
zstyle ':vcs_info:*' enable git hg
zstyle ':vcs_info:*' formats '(%r@%b)'
zstyle ':vcs_info:*' actionformats '(%r@%b|%a)'
autoload -Uz is-at-least
if is-at-least 4.3.10; then
    zstyle ':vcs_info:git:*' check-for-changes true
    zstyle ':vcs_info:git:*' stagedstr "+"
    zstyle ':vcs_info:git:*' unstagedstr "-"
    zstyle ':vcs_info:git:*' formats '(%r@%b%c%u)'
    zstyle ':vcs_info:git:*' actionformats '(%r@%b%c%u|%a)'
fi
function _update_vcs_info_msg() {
    psvar=()
    LANG=en_US.UTF-8 vcs_info
    [[ -n "$vcs_info_msg_0_" ]] && psvar[1]="$vcs_info_msg_0_"
}
add-zsh-hook precmd _update_vcs_info_msg
# Normal user
tmp_prompt="
%{${fg[yellow]}%}%/ %{${fg[green]}%}[%T |%D{%Y-%m-%d}]
%{${fg[cyan]}%}[%n]$ %{${reset_color}%}"
tmp_prompt2="%{${fg[cyan]}%}%_> %{${reset_color}%}"
tmp_rprompt="%1(v|%{${fg[yellow]}%}%1v |)%{${reset_color}%}"
tmp_sprompt="%{${fg[red]}%}Did you mean: %{${reset_color}%}"'"'"%r"'"'" %{${fg[red]}%}[Yes, No, Abort, Edit]-> %{${reset_color}%}"
# root
if [ ${UID} -eq 0 ]; then
    tmp_prompt="%B%U${tmp_prompt}%u%b"
    tmp_prompt2="%B%U${tmp_prompt2}%u%b"
    tmp_rprompt="%B%U${tmp_rprompt}%u%b"
    tmp_sprompt="%B%U${tmp_sprompt}%u%b"
fi
PROMPT=$tmp_prompt
PROMPT2=$tmp_prompt2
RPROMPT=$tmp_rprompt
SPROMPT=$tmp_sprompt
# SSH
[ -n "${REMOTEHOST}${SSH_CONNECTION}" ] &&
    PROMPT="%{${fg[white]}%}${HOST%%.*} ${PROMPT}"
;

# ---Title---
case "${TERM}" in
kterm*|xterm*|)
    precmd() {
        echo -ne "\033]0;${USER}@${HOST%%.*}\007"
    }
    ;;
esac

# ----------------
# Other
# ----------------

# rbenv
export PATH="$HOME/.rbenv/bin:$PATH"
eval "$(rbenv init -)"
